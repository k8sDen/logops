volumes:
  certs:
    driver: local
  esdata-master:
    driver: local
  esdata-hot:
    driver: local
  esdata-content:
    driver: local
  esdata-ingest:
    driver: local
  kibanadata:
    driver: local

networks:
  logops-net:
    driver: bridge

services:
  setup-es:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.1
    container_name: setup-es
    volumes:
      - ./elasticsearch/setup-elasticsearch.sh:/usr/share/elasticsearch/setup-elasticsearch.sh
      - certs:/usr/share/elasticsearch/config/certs
    user: "0"  # Запуск под рутом для изменения прав файлов
    command: ["bash", "-c", "/usr/share/elasticsearch/setup-elasticsearch.sh"]
    environment:
      - ELASTIC_PASSWORD=test123
    healthcheck:
      test: ["CMD-SHELL", "[ -f /usr/share/elasticsearch/config/certs/es-master/es-master.crt ]"]
      interval: 1s
      timeout: 5s
      retries: 120
    networks:
      - logops-net
  es-master:
    depends_on:
      setup-es:
        condition: service_healthy
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.1
    container_name: es-master
    volumes:
      - certs:/usr/share/elasticsearch/config/certs
      - esdata-master:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    environment:
      - node.name=es-master
      - cluster.name=es-cluster
      - cluster.initial_master_nodes=es-master
      - discovery.seed_hosts=es-hot,es-content,es-ingest
      - ELASTIC_PASSWORD=test123
      - bootstrap.memory_lock=true
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=certs/es-master/es-master.key
      - xpack.security.http.ssl.certificate=certs/es-master/es-master.crt
      - xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.key=certs/es-master/es-master.key
      - xpack.security.transport.ssl.certificate=certs/es-master/es-master.crt
      - xpack.security.transport.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.license.self_generated.type=basic
      - cluster.routing.allocation.disk.watermark.low=2gb
      - cluster.routing.allocation.disk.watermark.high=1gb
      - cluster.routing.allocation.disk.watermark.flood_stage=512mb
    mem_limit: 1073741824
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120
    networks:
      - logops-net
  es-hot:
    depends_on:
      - es-master
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.1
    container_name: es-hot
    volumes:
      - certs:/usr/share/elasticsearch/config/certs
      - esdata-hot:/usr/share/elasticsearch/data
    environment:
      - node.name=es-hot
      - cluster.name=es-cluster
      - cluster.initial_master_nodes=es-master
      - discovery.seed_hosts=es-master,es-content,es-ingest
      - bootstrap.memory_lock=true
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=certs/es-hot/es-hot.key
      - xpack.security.http.ssl.certificate=certs/es-hot/es-hot.crt
      - xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.key=certs/es-hot/es-hot.key
      - xpack.security.transport.ssl.certificate=certs/es-hot/es-hot.crt
      - xpack.security.transport.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.license.self_generated.type=basic
      - cluster.routing.allocation.disk.watermark.low=2gb
      - cluster.routing.allocation.disk.watermark.high=1gb
      - cluster.routing.allocation.disk.watermark.flood_stage=512mb
    mem_limit: 1073741824
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120
    networks:
      - logops-net
  es-content:
    depends_on:
      - es-hot
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.1
    container_name: es-content
    volumes:
      - certs:/usr/share/elasticsearch/config/certs
      - esdata-content:/usr/share/elasticsearch/data
    environment:
      - node.name=es-content
      - cluster.name=es-cluster
      - cluster.initial_master_nodes=es-master
      - discovery.seed_hosts=es-master,es-hot,es-ingest
      - bootstrap.memory_lock=true
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=certs/es-content/es-content.key
      - xpack.security.http.ssl.certificate=certs/es-content/es-content.crt
      - xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.key=certs/es-content/es-content.key
      - xpack.security.transport.ssl.certificate=certs/es-content/es-content.crt
      - xpack.security.transport.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.license.self_generated.type=basic
      - cluster.routing.allocation.disk.watermark.low=2gb
      - cluster.routing.allocation.disk.watermark.high=1gb
      - cluster.routing.allocation.disk.watermark.flood_stage=512mb
    mem_limit: 1073741824
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120
    networks:
      - logops-net
  es-ingest:
    depends_on:
      - es-master
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.1
    container_name: es-ingest
    volumes:
      - certs:/usr/share/elasticsearch/config/certs
      - esdata-ingest:/usr/share/elasticsearch/data
    environment:
      - node.name=es-ingest
      - cluster.name=es-cluster
      - cluster.initial_master_nodes=es-master
      - discovery.seed_hosts=es-master,es-hot,es-content
      - bootstrap.memory_lock=true
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=certs/es-ingest/es-ingest.key
      - xpack.security.http.ssl.certificate=certs/es-ingest/es-ingest.crt
      - xpack.security.http.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.key=certs/es-ingest/es-ingest.key
      - xpack.security.transport.ssl.certificate=certs/es-ingest/es-ingest.crt
      - xpack.security.transport.ssl.certificate_authorities=certs/ca/ca.crt
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.license.self_generated.type=basic
      - cluster.routing.allocation.disk.watermark.low=2gb
      - cluster.routing.allocation.disk.watermark.high=1gb
      - cluster.routing.allocation.disk.watermark.flood_stage=512mb
    mem_limit: 1073741824
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120
    networks:
      - logops-net
  kibana:
    depends_on:
      es-master:
        condition: service_healthy
      es-hot:
        condition: service_healthy
      es-content:
        condition: service_healthy
      es-ingest:
        condition: service_healthy
    image: docker.elastic.co/kibana/kibana:8.6.1
    container_name: kibana
    volumes:
      - certs:/usr/share/kibana/config/certs
      - kibanadata:/usr/share/kibana/data
    ports:
      - 5601:5601
    environment:
      - SERVERNAME=kibana
      - ELASTICSEARCH_HOSTS=https://es-master:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=kibana123
      - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=config/certs/ca/ca.crt
    mem_limit: 1073741824
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120
    networks:
      - logops-net
  zookeeper-1:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper-1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:2888:3888;zookeeper-3:2888:3888
    networks:
      - logops-net
  zookeeper-2:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper-2
    ports:
      - "2182:2182"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2182
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:2888:3888;zookeeper-3:2888:3888
    networks:
      - logops-net
  zookeeper-3:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper-3
    ports:
      - "2183:2183"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2183
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_SERVERS: zookeeper-1:2888:3888;zookeeper-2:2888:3888;zookeeper-3:2888:3888
    networks:
      - logops-net
  kafka-1:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-1
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper-1:2181,zookeeper-2:2182,zookeeper-3:2183"
      ZOOKEEPER_SASL_ENABLED: 'false'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092, SASL_PLAINTEXT://kafka-1:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT, SASL_PLAINTEXT:SASL_PLAINTEXT
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SASL_PLAINTEXT
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/configs/kafka_server_jaas.conf
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_SUPER_USERS: User:ANONYMOUS;User:admin
    volumes:
      - ./kafka/configs:/etc/kafka/configs
    ports:
      - "9092:9092"
      - "29092:29092"
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    networks:
      - logops-net
  kafka-2:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-2
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper-1:2181,zookeeper-2:2182,zookeeper-3:2183"
      ZOOKEEPER_SASL_ENABLED: 'false'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:9093, SASL_PLAINTEXT://kafka-2:29093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT, SASL_PLAINTEXT:SASL_PLAINTEXT
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SASL_PLAINTEXT
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/configs/kafka_server_jaas.conf
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_SUPER_USERS: User:ANONYMOUS;User:admin
    volumes:
      - ./kafka/configs:/etc/kafka/configs
    ports:
      - "9093:9093"
      - "29093:29093"
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    networks:
      - logops-net
  kafka-3:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-3
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper-1:2181,zookeeper-2:2182,zookeeper-3:2183"
      ZOOKEEPER_SASL_ENABLED: 'false'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-3:9094, SASL_PLAINTEXT://kafka-3:29094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT, SASL_PLAINTEXT:SASL_PLAINTEXT
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SASL_PLAINTEXT
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
      KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/configs/kafka_server_jaas.conf
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
    volumes:
      - ./kafka/configs:/etc/kafka/configs
    ports:
      - "9094:9094"
      - "29094:29094"
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    networks:
      - logops-net
  setup-kafka:
    image: confluentinc/cp-kafka:latest
    container_name: setup-kafka
    depends_on:
      - kafka-1
    networks:
      - logops-net
    command: >
      sh -c "
      echo 'Waiting for Kafka to be ready...' &&
      while ! nc -z kafka-1 9092; do sleep 2; done &&
      echo 'Kafka is up, creating topics and setting ACLs...' &&
      kafka-topics --create --topic nginx-logs-topic --partitions 3 --replication-factor 3 --if-not-exists --bootstrap-server kafka-1:9092 &&
      kafka-acls --add --allow-principal User:nginx-user --operation All --topic nginx-logs-topic --bootstrap-server kafka-1:9092 &&
      echo 'Setup complete.'"
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka-1
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-1:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper-1:2181
    networks:
      - logops-net
  